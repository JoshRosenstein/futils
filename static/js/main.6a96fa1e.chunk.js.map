{"version":3,"sources":["components/App.js","components/Editor.js","components/Browser.js","components/Console.js","components/Navbar.js","index.js"],"names":["F","forEach","method","global","R","PlaygroundHeader","_ref","title","runCode","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","Playground","state","history","js","isProcessing","setTitle","_this","setState","setHistory","setJs","getGist","id","fetch","concat","then","response","json","data","console","log","gistJs","Object","keys","files","find","file","includes","filename","content","addHistory","text","newHistory","_home_travis_build_JoshRosenstein_futils_docs_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","clearHistory","setTimeout","gistId","this","props","_this$state","playgroundId","_Navbar__WEBPACK_IMPORTED_MODULE_10__","_Editor__WEBPACK_IMPORTED_MODULE_7__","language","code","updateCode","_Console__WEBPACK_IMPORTED_MODULE_9__","_Browser__WEBPACK_IMPORTED_MODULE_8__","Component","require","Editor","value","handleChange","editor","debouncedUpdate","debounce","prevProps","prevState","options","lineNumbers","mode","theme","react__WEBPACK_IMPORTED_MODULE_5___default","react_codemirror2__WEBPACK_IMPORTED_MODULE_6__","onBeforeChange","__webpack_require__","d","__webpack_exports__","Browser","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","buildIframeSrc","iframeContainer","useRef","useEffect","window","addEventListener","e","current","hasChildNodes","removeChild","lastChild","iframe","document","height","width","sandbox","style","border","background","newJs","replace","RegExp","srcdoc","appendChild","ref","display","Console","animateScroll","duration","scrollDiv","start","scrollTop","change","scrollHeight","increment","animate","elapsedTime","position","currentTime","easeInOut","map","item","index","key","_emotion_styled__WEBPACK_IMPORTED_MODULE_1__","Nav","styled","NavTitle","fontSize","Navbar","displayName","r","_components_App__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_1___default","react_dom__WEBPACK_IMPORTED_MODULE_2__","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6a96fa1e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Editor from './Editor';\nimport Browser from './Browser';\nimport Console from './Console';\nimport Navbar from './Navbar';\nimport './App.css';\nimport * as R from 'ramda'\nimport * as F from '@roseys/futils'\n\n// Expose libraries for the REPL onto window\nF.keys(F).forEach(method => {\n  global[method] = F[method]\n})\n\n\nglobal.F = F\nglobal.R = R\n\n\n/**\n * Separating to its own component cuz divitis\n */\nconst PlaygroundHeader = ({ title, runCode }) => (\n  <div className='playground-header'>\n    <div className='columns'>\n      <div className='column is-one-quarter'>\n        <h2 className='title is-6'>{title}</h2>\n      </div>\n      <div className='column has-text-right is-one-quarter'>\n        <button onClick={runCode}>Run</button>\n      </div>\n    </div>\n  </div>\n);\n\n/**\n * The main playground component\n * Get a gist and only pull the first file of each .html, .css, .js\n */\nexport default class Playground extends Component {\n  state = {\n    history: [],\n    title: '',\n    js: '',\n    isProcessing: false, // tiny way to stop a user from hitting run 10000 times in a row\n  };\n\n  // helpers cuz lazy\n  setTitle = (title) => this.setState({ title });\n  setHistory = (history) => this.setState({ history });\n  setJs = (js) => this.setState({ js });\n\n  /**\n   * Grab the gist on first mount\n   * mocking a gist id for now\n   * https://gist.github.com/sevilayha/efe7fe257c9bfdc4d81aa654ddbb5bec\n   */\n  componentDidMount() {\n    const gistId = this.props.gistId || '64956aea8f0f09bb97e7ee7dd2fe5c85';\n    this.getGist(gistId);\n  }\n\n  /**\n   * Get the gist from GitHub API\n   * Parse for the .html, .css, .js files\n   * This is simple. Will only pull the first file in the gist of each extension\n   */\n  getGist = (id) => {\n    fetch(`https://api.github.com/gists/${id}`)\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n        // find the first .html, .css, .js files and apply them as the content\n        const fileNames = Object.keys(data.files);\n        const gistJs = fileNames.find((file) => file.includes('.js'));\n\n        this.setTitle(data.files[gistJs].filename);\n        if (gistJs) this.setJs(data.files[gistJs].content);\n      });\n  };\n\n  addHistory = (text) => {\n    const newHistory = [...this.state.history, { text }];\n    this.setHistory(newHistory);\n  };\n\n  clearHistory = () => this.setHistory([]);\n\n  runCode = () => {\n    if (this.state.isProcessing) return false;\n    this.setState({ isProcessing: true });\n\n    const { js } = this.state;\n\n    this.setJs('');\n\n    setTimeout(() => {\n      this.setJs(js);\n      this.setState({ isProcessing: false });\n    }, 250);\n  };\n\n  render() {\n    const { history, title, js } = this.state;\n    const { playgroundId } = this.props;\n\n    return (\n      <div>\n        <Navbar title='FUTILS' />\n        <div className='playground'>\n          <PlaygroundHeader title={title} runCode={this.runCode} />\n          <div className='columns'>\n\n          <Editor language='javascript' code={js} updateCode={this.setJs} />\n          <Console history={history} clearHistory={this.clearHistory} />\n          </div>\n\n          <Browser\n            playgroundId={playgroundId}\n            js={js}\n            addHistory={this.addHistory}\n          />\n\n\n        </div>{' '}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport debounce from 'lodash.debounce';\n\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/neat.css';\nimport './Editor.css';\nrequire('codemirror/mode/css/css');\nrequire('codemirror/mode/javascript/javascript');\n\nexport default class Editor extends Component {\n  state = { value: this.props.code };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.code !== this.props.code)\n      this.setState({ value: this.props.code });\n  }\n\n  handleChange = (editor, data, value) => {\n    this.setState({ value });\n    this.debouncedUpdate(value);\n  };\n\n  debouncedUpdate = debounce((value) => {\n    this.props.updateCode(value);\n  }, 500);\n\n  render() {\n    const { value } = this.state;\n    const { language } = this.props;\n    const options = { lineNumbers: true, mode: language, theme: 'neat' };\n\n    return (\n      <div className='playground-editor'>\n        <CodeMirror\n          value={value}\n          onBeforeChange={this.handleChange}\n          options={options}\n        />\n      </div>\n    );\n  }\n}\n","import React, { useEffect, useRef } from 'react';\n\n/**\n * Helper to build out the iframe's src\n * scotchLog is our way of sending data up to the parent through postMessage\n */\nconst buildIframeSrc = (js) => `\n  <html>\n  <head>\n\n  </head>\n  <body>\n\n\n  <script>\n    function getLog() {\n      let output = \"\", arg, i;\n      for (i = 0; i < arguments.length; i++) {\n        arg = arguments[i];\n        output += typeof arg === \"object\" ? JSON.stringify(arg) : arg;\n      }\n      window.parent.postMessage(output, '*');\n      console.log(...arguments);\n    }\n\n    // -----------------------------------------\n\n    try {\n      ${js}\n    } catch (err) {\n      window.parent.postMessage(err.message, '*');\n      console.error(err.message);\n    }\n  </script>\n  </body>\n  </html>\n`;\n\n/**\n * The browser component has a nested iframe\n * Every time the html, css, js props change, destroy the iframe and create a new iframe\n */\nexport default function Browser({ js, addHistory }) {\n  const iframeContainer = useRef(null);\n\n  /**\n   * Watch for postMessage coming from our iframe\n   */\n  useEffect(() => {\n    window.addEventListener('message', (e) => {\n      if (!e.data) return false; // only handle if theres data\n      if (typeof e.data !== 'string') return false; // data must be a string\n      if (e.data.includes('_')) return false; // dont watch for events emitted by the react library\n      addHistory(e.data);\n    });\n  }, [addHistory]);\n\n  /**\n   * Run the code\n   */\n  useEffect(() => {\n    // remove all children\n    while (iframeContainer.current.hasChildNodes()) {\n      iframeContainer.current.removeChild(iframeContainer.current.lastChild);\n    }\n\n    // create new iframe\n    let iframe = document.createElement('iframe');\n    iframe.height = '100%';\n    iframe.width = '100%';\n    iframe.sandbox = 'allow-scripts allow-same-origin';\n    iframe.style.border = 'none';\n    iframe.background = '#fff';\n\n    // convert all console.log to use scotchLog\n    // scotchLog swill send events back up to this parent\n    // we can use that to add to history\n    // scotchLog will also run console.log()\n    const newJs = js\n      .replace(new RegExp('console.log', 'g'), 'getLog')\n      .replace(new RegExp('F.', 'g'), 'parent.F.')\n      .replace(new RegExp('R.', 'g'), 'parent.R.');\n    iframe.srcdoc = buildIframeSrc(newJs);\n    iframeContainer.current.appendChild(iframe);\n  }, [js]);\n\n  const display = 'none';\n\n  return (\n    <div\n      ref={iframeContainer}\n      className='iframe-container'\n      style={{\n        height: '100%',\n        width: '100%',\n        background: 'white',\n        display,\n      }}\n    />\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport './Console.css';\n\n// First, define a helper function.\nconst animateScroll = (duration, scrollDiv) => {\n  var start = scrollDiv.current.scrollTop;\n  var end = scrollDiv.current.scrollHeight;\n  var change = end - start;\n  var increment = 20;\n\n  function easeInOut(currentTime, start, change, duration) {\n    // by Robert Penner\n    currentTime /= duration / 2;\n    if (currentTime < 1) {\n      return (change / 2) * currentTime * currentTime + start;\n    }\n    currentTime -= 1;\n    return (-change / 2) * (currentTime * (currentTime - 2) - 1) + start;\n  }\n\n  function animate(elapsedTime) {\n    elapsedTime += increment;\n    var position = easeInOut(elapsedTime, start, change, duration);\n    scrollDiv.current.scrollTop = position;\n    if (elapsedTime < duration) {\n      setTimeout(function() {\n        animate(elapsedTime);\n      }, increment);\n    }\n  }\n\n  animate(0);\n};\n\nexport default function Console({ history, clearHistory }) {\n  const scrollDiv = useRef(null);\n\n  useEffect(() => {\n    animateScroll(300, scrollDiv);\n  }, [history]);\n\n  return (\n    <div className='playground-console-container'>\n      <div ref={scrollDiv} className='playground-console'>\n        <ul>\n          {history.map((item, index) => (\n            <li key={index} className='console-line'>\n              <span className='console-carrot'>></span>{' '}\n              <span className='console-text'>{item.text}</span>\n            </li>\n          ))}\n          <li>\n            <span className='console-carrot'>></span>\n          </li>\n        </ul>\n\n        <button\n          onClick={clearHistory}\n          className='button is-white is-outlined is-small'\n        >\n          Clear\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from '@emotion/styled'\n\nconst Nav=styled('header')({\n  // padding: '15px var(--default-padding)',\n  // backgroundColor: 'var(--blue)',\n  // color: 'var(--white)',\n})\n\nconst NavTitle=styled('div')({\n  fontSize: '18px',\n})\n\nconst Navbar=props => {\n  return (\n    <Nav>\n      <NavTitle>{props.title}</NavTitle>\n    </Nav>\n  )\n}\n\nNavbar.displayName='Navbar'\nNavbar.propTypes={\n  title: PropTypes.string.isRequired,\n}\n\nexport default Navbar\n","import App from './components/App';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}